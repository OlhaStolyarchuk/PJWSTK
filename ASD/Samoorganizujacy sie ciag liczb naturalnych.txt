#include <stdio.h>
#include<iostream>
#include <stdlib.h>
#include <conio.h>

class Number
{
     public:
	unsigned long long int wrt;
	Number* n;
	Number(unsigned long long int zn)
	{
		wrt = zn;
		n = NULL;
	}
};
int main()
{
	long long int count = 0;
	unsigned long long int w;
    std::cin>>w;
	count++;
	if(!feof(stdin))
	{
		unsigned long long int el = 0;
		unsigned long long int tmp;
	    std::cin>>tmp;
		count++;
		Number* p = new Number(tmp);
	
		el++;

		Number*c = p;
		 unsigned char znak;
    int kod
   znak = getch();
        kod= static_cast < int >( znak );
		while (tmp!=13)
		{
		c->n = new Number(tmp);
		c= c->n;
		el++;
		count++;
		}
        c->n = p;
		c = p;
		int i =0;
		while(i<w)
		{
			if (el == 0)
			break;
			unsigned long long int v;
			if (c->wrt & 1)
			{
			v =c->wrt;
			Number* newN = new Number(v - 1);
			newN->n = c->n;
			c->n = newN;
			el++;
			}
			else
			{
			v = c->n->wrt;
			Number* d = c->n;
			c->n = d->n;
			delete d;
			el--;
			}
		if (el > 0)
			{
			v = v % el;
			int j =0;
			while(j<v)
			{
			c = c->n;
			j++;
		}
			}
		i++;
		}
		if (el > 0)
		{
		p = c;
		fprintf(stdout, "%d", c->wrt);
     	c =c->n;
		while (p !=c)
		{
		fprintf(stdout, " %d", c->wrt);
		c =c->n;
		}
	}
}
       std::cout<<"\n"<<count;
       system("pause");
	   return 0;
}

		
ZADANIE

Rozwa¿my indeksowany ci¹g liczb naturalnych C, dla którego definiujemy pojêcie wskaŸnika aktualnej pozycji POS. Dalej wprowadzamy dwie operacje na elementach tego ci¹gu:

- R, usuniêcie elementu c ci¹gu o indeksie POS+1, nastêpnie przesuniêcie wskaŸnika POS o c elementów w prawo,

- X, wstawienie tu¿ po elemencie c ci¹gu o indeksie POS (tj. na pozycjê POS+1) elementu o wartoœci c-1, nastêpnie przesuniêcie wskaŸnika POS o c elementów w prawo.

Wyznacz postaæ ci¹gu wejœciowego C po t-krotnym wykonaniu schematu operacji R i X tak, ¿e je¿eli element ci¹gu o indeksie POS jest liczb¹ parzyst¹, to wykonaj operacjê R, w przeciwnym przypadku wykonaj operacjê X. Przyjmij pocz¹tkowo, ¿e wskaŸnik POS wskazuje na pierwszy element ci¹gu wejœciowego (je¿eli taki istnieje), oraz je¿eli zachodzi taka koniecznoœæ przesuwanie wskaŸnika POS w prawo odbywa siê w sposób cykliczny wzglêdem elementów ci¹gu C.

 

WEJŒCIE

Wiersz zawieraj¹cy kolejno:

 - liczbê definiuj¹ca krotnoœæ t powtórzeñ schematu operacji R i X,

 - elementy ci¹gu C, z których ka¿dy poprzedzony jest znkiem odstêpu (kod ASCII 32),

 - znak koñca pliku (EOF).

 

WYJŒCIE

Wiersz zakoñczony znakiem nowej linii, zawieraj¹cy ci¹g liczb naturalnych bêd¹cy rozwi¹zaniem postawionego problemu wypisany, je¿eli zachodzi taka koniecznoœæ cyklicznie, pocz¹wszy od elementu ci¹gu wynikowego znajduj¹cego siê na pozycji wskazywanej przez wskaŸnik POS w kierunku w prawo. Elementy ci¹gu wynikowego oddzielone znakiem odstêpu.

W przypadku, kiedy odpowiedzi¹ jest ci¹g pusty wypisz na wyjœcie liczbê -1 oraz znak nowej linii.

Dodatkowo: wiersz zawieraj¹cy liczbê kontroln¹ równ¹ liczbie znaków w³aœciwych wczytanych z wejœcia (znak w³aœciwy to ka¿dy znak niebêd¹cy znakiem bia³ym, tj. znak odstêpu, znak nowej linii, znak tabulacji, oraz znakiem koñca pliku, tj. EOF).

 

OGRANICZENIA

D³ugoœæ pocz¹tkowa ci¹gu C zawarta w przedziale [0,10^7]. Liczba t powtórzeñ schematu operacji R albo X ograniczona od góry przez 10^7. Zakres przesuniêcia wskaŸnika POS w prawo ograniczony w przedziale [0,10^9].

 

PRZYK£AD 1

wejœcie:

3 1 2 3
wyjœcie:

0 0 3 1


4

 

/* KOMENTARZ DO ROZWI¥ZANIA


t=1: postaæ pocz¹tkowa ci¹gu: 1 2 3


     aktualna pozycja: POS->1


     wykonana operacja: X, c=1


     postaæ koñcowa ci¹gu: 1 0 2 3


     finalna pozycja: POS->0


t=2: postaæ pocz¹tkowa ci¹gu: 1 0 2 3


     aktualna pozycja: POS->0


     wykonana operacja: R, c=2


     postaæ koñcowa ci¹gu: 1 0 3


     finalna pozycja: POS->1


t=3: postaæ pocz¹tkowa ci¹gu: 1 0 3


     aktualna pozycja: POS->1


     wykonana operacja: X, c=1


     postaæ koñcowa ci¹gu: 1 0 0 3


     finalna pozycja: POS->0


Rozwi¹zanie to ci¹g (czytany od elementu na pozycji POS w kierunku w prawo) postaci: 0 0 3 1.


Dodatkowo z wejœcia wczytano ³¹cznie 4 znaki w³aœciwe. */

 

PRZYK£AD 2

wejœcie:

8 5 1 2 3
wyjœcie:

2 2


5

 

PRZYK£AD 3

wejœcie:

50 378 31 239 351 192 135 143 100 115 398 176 140 468 295 124 32 379 438 62 200 313 92 450 75 294 338 459 344 56 162 455 307 311 432 209 458 51 475 360 187 88 489 238 326 175 180 358 254 198 79

wyjœcie:

454 307 306 310 310 432 51 50 475 360 358 198 378 351 350 135 134 143 142 142 100 398 140 62 313 312 312 450 75 294 458 56


143